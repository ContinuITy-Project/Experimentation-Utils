{"behaviors":{},"test-plan":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1\">\n  <hashTree>\n    <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"Test Plan\" enabled=\"true\">\n      <stringProp name=\"TestPlan.comments\"></stringProp>\n      <boolProp name=\"TestPlan.functional_mode\">false</boolProp>\n      <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>\n      <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n        <collectionProp name=\"Arguments.arguments\">\n          <elementProp name=\"test\" elementType=\"Argument\">\n            <stringProp name=\"Argument.name\">test</stringProp>\n            <stringProp name=\"Argument.value\">false</stringProp>\n            <stringProp name=\"Argument.metadata\">=</stringProp>\n          </elementProp>\n        </collectionProp>\n      </elementProp>\n      <stringProp name=\"TestPlan.user_define_classpath\"></stringProp>\n    </TestPlan>\n    <hashTree>\n      <SetupThreadGroup guiclass=\"SetupThreadGroupGui\" testclass=\"SetupThreadGroup\" testname=\"Thread Group\" enabled=\"true\">\n        <stringProp name=\"ThreadGroup.on_sample_error\">continue</stringProp>\n        <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\" guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\" enabled=\"false\">\n          <boolProp name=\"LoopController.continue_forever\">false</boolProp>\n          <intProp name=\"LoopController.loops\">-1</intProp>\n        </elementProp>\n        <stringProp name=\"ThreadGroup.num_threads\">50</stringProp>\n        <stringProp name=\"ThreadGroup.ramp_time\">50</stringProp>\n        <longProp name=\"ThreadGroup.start_time\">0</longProp>\n        <longProp name=\"ThreadGroup.end_time\">0</longProp>\n        <boolProp name=\"ThreadGroup.scheduler\">true</boolProp>\n        <stringProp name=\"ThreadGroup.duration\">720</stringProp>\n        <stringProp name=\"ThreadGroup.delay\">0</stringProp>\n      </SetupThreadGroup>\n      <hashTree>\n        <ConfigTestElement guiclass=\"HttpDefaultsGui\" testclass=\"ConfigTestElement\" testname=\"HTTP Request Defaults\" enabled=\"true\">\n          <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n            <collectionProp name=\"Arguments.arguments\"/>\n          </elementProp>\n          <stringProp name=\"HTTPSampler.domain\"></stringProp>\n          <stringProp name=\"HTTPSampler.port\"></stringProp>\n          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n          <stringProp name=\"HTTPSampler.protocol\"></stringProp>\n          <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n          <stringProp name=\"HTTPSampler.path\"></stringProp>\n          <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n        </ConfigTestElement>\n        <hashTree/>\n        <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">\n          <collectionProp name=\"HeaderManager.headers\">\n            <elementProp name=\"Accept-Language\" elementType=\"Header\">\n              <stringProp name=\"Header.name\">Accept-Language</stringProp>\n              <stringProp name=\"Header.value\">de-de,de;q=0.8,en-us;q=0.5,en;q=0.3</stringProp>\n            </elementProp>\n            <elementProp name=\"Accept\" elementType=\"Header\">\n              <stringProp name=\"Header.name\">Accept</stringProp>\n              <stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>\n            </elementProp>\n            <elementProp name=\"User-Agent\" elementType=\"Header\">\n              <stringProp name=\"Header.name\">User-Agent</stringProp>\n              <stringProp name=\"Header.value\">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0</stringProp>\n            </elementProp>\n            <elementProp name=\"DNT\" elementType=\"Header\">\n              <stringProp name=\"Header.name\">DNT</stringProp>\n              <stringProp name=\"Header.value\">1</stringProp>\n            </elementProp>\n            <elementProp name=\"Accept-Encoding\" elementType=\"Header\">\n              <stringProp name=\"Header.name\">Accept-Encoding</stringProp>\n              <stringProp name=\"Header.value\">gzip, deflate</stringProp>\n            </elementProp>\n          </collectionProp>\n        </HeaderManager>\n        <hashTree/>\n        <CookieManager guiclass=\"CookiePanel\" testclass=\"CookieManager\" testname=\"HTTP Cookie Manager\" enabled=\"true\">\n          <collectionProp name=\"CookieManager.cookies\"/>\n          <stringProp name=\"TestPlan.comments\">generated</stringProp>\n          <boolProp name=\"CookieManager.clearEachIteration\">true</boolProp>\n        </CookieManager>\n        <hashTree/>\n        <UserParameters guiclass=\"UserParametersGui\" testclass=\"UserParameters\" testname=\"User Parameters\" enabled=\"true\">\n          <collectionProp name=\"UserParameters.names\"/>\n          <collectionProp name=\"UserParameters.thread_values\">\n            <collectionProp name=\"1\"/>\n          </collectionProp>\n          <boolProp name=\"UserParameters.per_iteration\">true</boolProp>\n        </UserParameters>\n        <hashTree/>\n        <Arguments guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n          <collectionProp name=\"Arguments.arguments\">\n            <elementProp name=\"Input_ApplicationPerformanceSettingsGET_conversationId\" elementType=\"Argument\">\n              <stringProp name=\"Argument.name\">Input_ApplicationPerformanceSettingsGET_conversationId</stringProp>\n              <stringProp name=\"Argument.value\">7;8;</stringProp>\n              <stringProp name=\"Argument.metadata\">=</stringProp>\n            </elementProp>\n            <elementProp name=\"Input_DVDGET_conversationId\" elementType=\"Argument\">\n              <stringProp name=\"Argument.name\">Input_DVDGET_conversationId</stringProp>\n              <stringProp name=\"Argument.value\">2;5;6;</stringProp>\n              <stringProp name=\"Argument.metadata\">=</stringProp>\n            </elementProp>\n            <elementProp name=\"Input_ShopGET_conversationId\" elementType=\"Argument\">\n              <stringProp name=\"Argument.name\">Input_ShopGET_conversationId</stringProp>\n              <stringProp name=\"Argument.value\">6;10;</stringProp>\n              <stringProp name=\"Argument.metadata\">=</stringProp>\n            </elementProp>\n            <elementProp name=\"Input_ShopPOST_S_Query\" elementType=\"Argument\">\n              <stringProp name=\"Argument.name\">Input_ShopPOST_S_Query</stringProp>\n              <stringProp name=\"Argument.value\">Syriana;Madagascar;</stringProp>\n              <stringProp name=\"Argument.metadata\">=</stringProp>\n            </elementProp>\n          </collectionProp>\n        </Arguments>\n        <hashTree/>\n        <InterleaveControl guiclass=\"InterleaveControlGui\" testclass=\"InterleaveControl\" testname=\"Interleave Controller\" enabled=\"true\">\n          <intProp name=\"InterleaveControl.style\">1</intProp>\n          <boolProp name=\"InterleaveControl.accrossThreads\">false</boolProp>\n        </InterleaveControl>\n        <hashTree>\n          <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller (Shopper)\" enabled=\"true\">\n            <boolProp name=\"LoopController.continue_forever\">true</boolProp>\n            <stringProp name=\"LoopController.loops\">1</stringProp>\n          </LoopController>\n          <hashTree>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Home (HomeGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\"/>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/home</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree/>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">2000</stringProp>\n              <stringProp name=\"RandomTimer.range\">500</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Browse (ShopGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\">\n                  <elementProp name=\"conversationId\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">conversationId</stringProp>\n                    <stringProp name=\"Argument.value\">${__GetRandomString(${Input_ShopGET_conversationId},;)}</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                </collectionProp>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/browse</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree>\n              <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Regular Expression Extractor\" enabled=\"true\">\n                <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>\n                <stringProp name=\"RegexExtractor.refname\">ShopPOST_ViewStateExtractedInput</stringProp>\n                <stringProp name=\"RegexExtractor.regex\">id=&quot;javax.faces.ViewState&quot; value=&quot;(.*)&quot;</stringProp>\n                <stringProp name=\"RegexExtractor.template\">$1$</stringProp>\n                <stringProp name=\"RegexExtractor.default\">NOT FOUND</stringProp>\n                <stringProp name=\"RegexExtractor.match_number\">1</stringProp>\n              </RegexExtractor>\n              <hashTree/>\n            </hashTree>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">100</stringProp>\n              <stringProp name=\"RandomTimer.range\">50</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Home (HomeGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\"/>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/home</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree/>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">2000</stringProp>\n              <stringProp name=\"RandomTimer.range\">500</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Search (ShopPOST)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\">\n                  <elementProp name=\"SearchForm%3ASearch\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">SearchForm%3ASearch</stringProp>\n                    <stringProp name=\"Argument.value\">Search</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                  <elementProp name=\"SearchForm%3APageSize\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">SearchForm%3APageSize</stringProp>\n                    <stringProp name=\"Argument.value\">15</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                  <elementProp name=\"javax.faces.ViewState\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">true</boolProp>\n                    <stringProp name=\"Argument.name\">javax.faces.ViewState</stringProp>\n                    <stringProp name=\"Argument.value\">${ShopPOST_ViewStateExtractedInput}</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                  <elementProp name=\"SearchForm\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">SearchForm</stringProp>\n                    <stringProp name=\"Argument.value\">SearchForm</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                  <elementProp name=\"SearchForm%3AQuery\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">SearchForm%3AQuery</stringProp>\n                    <stringProp name=\"Argument.value\">${__GetRandomString(${Input_ShopPOST_S_Query},;)}</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                </collectionProp>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/browse</stringProp>\n              <stringProp name=\"HTTPSampler.method\">POST</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree/>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">100</stringProp>\n              <stringProp name=\"RandomTimer.range\">50</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Add to Cart (DVDGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\">\n                  <elementProp name=\"actionMethod\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">actionMethod</stringProp>\n                    <stringProp name=\"Argument.value\">dvd.xhtml%3Asearch.addToCart</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                  <elementProp name=\"conversationId\" elementType=\"HTTPArgument\">\n                    <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>\n                    <stringProp name=\"Argument.name\">conversationId</stringProp>\n                    <stringProp name=\"Argument.value\">${__GetRandomString(${Input_DVDGET_conversationId},;)}</stringProp>\n                    <stringProp name=\"Argument.metadata\">=</stringProp>\n                    <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>\n                  </elementProp>\n                </collectionProp>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/dvd/195</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree/>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">2000</stringProp>\n              <stringProp name=\"RandomTimer.range\">1000</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n          </hashTree>\n          <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller (Power Observer)\" enabled=\"true\">\n            <boolProp name=\"LoopController.continue_forever\">true</boolProp>\n            <stringProp name=\"LoopController.loops\">20</stringProp>\n          </LoopController>\n          <hashTree>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"View Latest Orders (LatestOrdersGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\"/>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/latestorders</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <stringProp name=\"HTTPSampler.concurrentPool\">4</stringProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree>\n              <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Regular Expression Extractor\" enabled=\"true\">\n                <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>\n                <stringProp name=\"RegexExtractor.refname\">LatestOrdersPOST_ViewStateExtractedInput</stringProp>\n                <stringProp name=\"RegexExtractor.regex\">id=&quot;javax.faces.ViewState&quot; value=&quot;(.*)&quot;</stringProp>\n                <stringProp name=\"RegexExtractor.template\">$1$</stringProp>\n                <stringProp name=\"RegexExtractor.default\">NOT FOUND</stringProp>\n                <stringProp name=\"RegexExtractor.match_number\">1</stringProp>\n              </RegexExtractor>\n              <hashTree/>\n            </hashTree>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">300</stringProp>\n              <stringProp name=\"RandomTimer.range\">100</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n          </hashTree>\n          <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller (Aggressive Home Visitor)\" enabled=\"true\">\n            <boolProp name=\"LoopController.continue_forever\">true</boolProp>\n            <stringProp name=\"LoopController.loops\">25</stringProp>\n          </LoopController>\n          <hashTree>\n            <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Home (HomeGET)\" enabled=\"true\">\n              <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n                <collectionProp name=\"Arguments.arguments\"/>\n              </elementProp>\n              <stringProp name=\"HTTPSampler.domain\">letslx036</stringProp>\n              <stringProp name=\"HTTPSampler.port\">8080</stringProp>\n              <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n              <stringProp name=\"HTTPSampler.protocol\">http</stringProp>\n              <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n              <stringProp name=\"HTTPSampler.path\">/dvdstore/home</stringProp>\n              <stringProp name=\"HTTPSampler.method\">GET</stringProp>\n              <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>\n              <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n              <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>\n              <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n              <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n              <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n            </HTTPSamplerProxy>\n            <hashTree/>\n            <GaussianRandomTimer guiclass=\"GaussianRandomTimerGui\" testclass=\"GaussianRandomTimer\" testname=\"Gaussian Random Timer\" enabled=\"true\">\n              <stringProp name=\"ConstantTimer.delay\">50</stringProp>\n              <stringProp name=\"RandomTimer.range\">20</stringProp>\n            </GaussianRandomTimer>\n            <hashTree/>\n          </hashTree>\n        </hashTree>\n        <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">\n          <boolProp name=\"ResultCollector.error_logging\">false</boolProp>\n          <objProp>\n            <name>saveConfig</name>\n            <value class=\"SampleSaveConfiguration\">\n              <time>true</time>\n              <latency>true</latency>\n              <timestamp>true</timestamp>\n              <success>true</success>\n              <label>true</label>\n              <code>true</code>\n              <message>true</message>\n              <threadName>true</threadName>\n              <dataType>true</dataType>\n              <encoding>false</encoding>\n              <assertions>true</assertions>\n              <subresults>true</subresults>\n              <responseData>false</responseData>\n              <samplerData>false</samplerData>\n              <xml>false</xml>\n              <fieldNames>false</fieldNames>\n              <responseHeaders>false</responseHeaders>\n              <requestHeaders>false</requestHeaders>\n              <responseDataOnError>false</responseDataOnError>\n              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>\n              <assertionsResultsToSave>0</assertionsResultsToSave>\n              <bytes>true</bytes>\n              <sentBytes>true</sentBytes>\n              <threadCounts>true</threadCounts>\n              <sampleCount>true</sampleCount>\n              <connectTime>true</connectTime>\n            </value>\n          </objProp>\n          <stringProp name=\"filename\"></stringProp>\n        </ResultCollector>\n        <hashTree/>\n        <ResultCollector guiclass=\"RespTimeGraphVisualizer\" testclass=\"ResultCollector\" testname=\"Response Time Graph\" enabled=\"true\">\n          <boolProp name=\"ResultCollector.error_logging\">false</boolProp>\n          <objProp>\n            <name>saveConfig</name>\n            <value class=\"SampleSaveConfiguration\">\n              <time>true</time>\n              <latency>true</latency>\n              <timestamp>true</timestamp>\n              <success>true</success>\n              <label>true</label>\n              <code>true</code>\n              <message>true</message>\n              <threadName>true</threadName>\n              <dataType>true</dataType>\n              <encoding>false</encoding>\n              <assertions>true</assertions>\n              <subresults>true</subresults>\n              <responseData>false</responseData>\n              <samplerData>false</samplerData>\n              <xml>false</xml>\n              <fieldNames>false</fieldNames>\n              <responseHeaders>false</responseHeaders>\n              <requestHeaders>false</requestHeaders>\n              <responseDataOnError>false</responseDataOnError>\n              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>\n              <assertionsResultsToSave>0</assertionsResultsToSave>\n              <bytes>true</bytes>\n              <sentBytes>true</sentBytes>\n              <threadCounts>true</threadCounts>\n              <sampleCount>true</sampleCount>\n              <connectTime>true</connectTime>\n            </value>\n          </objProp>\n          <stringProp name=\"filename\">C:\\Users\\hsh\\git\\ContinuITy\\continuity.cli\\ws\\jmeter-wessbas-dvd-1\\results.csv</stringProp>\n        </ResultCollector>\n        <hashTree/>\n      </hashTree>\n    </hashTree>\n  </hashTree>\n</jmeterTestPlan>\n"}